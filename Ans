import { Component, OnInit } from '@angular/core';
import { AuthService } from '../auth.service';
import { ActivatedRoute } from '@angular/router';
import { MetadataService } from '../metadata.service';

@Component({
  selector: 'app-mgr-leave-requests',
  templateUrl: './mgr-leave-requests.component.html',
  styleUrls: ['./mgr-leave-requests.component.css']
})
export class MgrLeaveRequestsComponent implements OnInit {

  applyLeave:boolean=false;
  disableApplyLeave:boolean=false;
  employeeLeaves:any[] =[];
  managerId:number;
  role:string;
  dummy:string='';
  subs:any[]=[];
  tableData: any[]=[
    {employeeName:'Ram',FromDate:1,ToDate:2,comments:'xyz',contact:'gahs',leavetype:'pl',Trantype:'full'},
    {employeeName:'Ram',FromDate:1,ToDate:2,comments:'xyz',contact:'gahs',leavetype:'pl',Trantype:'full'},
    {employeeName:'Ram',FromDate:1,ToDate:2,comments:'xyz',contact:'gahs',leavetype:'pl',Trantype:'full'}

  ]

  constructor(private authService: AuthService, private route: ActivatedRoute, private metadataService:MetadataService) { }
  

  ngOnInit():void {
    this.disableApplyLeave=false;
    console.log(this.route);
    this.route.paramMap.subscribe(params => {
      this.managerId =+params.get('id');
      const user = this.authService.getAuthenticatedUser();
      const details = this.authService.getEmployeesUnderManager();
      console.log('leaves ->',this.subs);
      this.managerId=user.id;
      if(user && user.role==='manager' ){
        this.subs=details;
    }
    });

  }
  review(leaveId:number){
    const done = this.metadataService.reviewLeave(leaveId,);

  }
  applyLeaveClicked(){
    this.applyLeave=true;
    this.disableApplyLeave=true;
  }
  public storyListTable: any = {
  
    defaultColDef: {
      suppressMenu: true,
      cellStyle: () => {
        return { border: "none" };
      },
    },
    rowStyle: { background: 'white', borderBottom: '0.8px solid #938c85' },
    columnDefs: [
      {
        field: 'fromDate',
        headerName: 'fromDate',
        headerTooltip: 'fromDate',
        lockPosition: true,
        unSortIcon: true,
        sortable: true,
        resizable: true,
  
        tooltipField: 'fromDate'
      }, {
        field: 'toDate',
        headerName: 'toDate',
        headerTooltip: 'toDate',
        lockPosition: true,
        unSortIcon: true,
        sortable: true,
        resizable: true,
  
        tooltipField: 'toDate'
      },
      {
        field: 'transactionType',
        headerName: 'transactionType',
        headerTooltip: 'transactionType',
        lockPosition: true,
        unSortIcon: true,
        sortable: true,
        resizable: true,
  
        tooltipField: 'transactionType'
      },
      {
        field: 'leaveType',
        headerName: 'leaveType',
        headerTooltip: 'leaveType',
        lockPosition: true,
        unSortIcon: true,
        sortable: true,
        resizable: true,
  
        tooltipField: 'leaveType'
      },
      {
        field: 'comments',
        headerName: 'comments',
        headerTooltip: 'comments',
        lockPosition: true,
        unSortIcon: true,
        sortable: true,
        resizable: true,
  
        tooltipField: 'comments'
      },
      {
        field: 'emergencyContact',
        headerName: 'emergencyContact',
        headerTooltip: 'emergencyContact',
        lockPosition: true,
        unSortIcon: true,
        sortable: true,
        resizable: true,
  
        tooltipField: 'emergencyContact'
      },
      {
        field: 'status',
        headerName: 'status',
        headerTooltip: 'status',
        lockPosition: true,
        unSortIcon: true,
        sortable: true,
        resizable: true,
  
        tooltipField: 'status'
      }
    ], 
    rowData:this.employeeLeaves,
  
  
    // onFirstDataRendered: () => {
    //   this.gridApi.sizeColumnsToFit();
    // },
    // suppressPaginationPanel: true
    
  };

}

