import { ApiGeneralSettingDto } from './api-general-setting-dto';
import { ApiEmailContactDto } from './api-email-contact-dto';
import { ApiFeatureDto } from './api-feature-dto';

describe('ApiGeneralSettingDto', () => {
  let apiGeneralSettingDto: ApiGeneralSettingDto;

  beforeEach(() => {
    apiGeneralSettingDto = new ApiGeneralSettingDto();
  });

  it('should create an instance', () => {
    expect(apiGeneralSettingDto).toBeTruthy();
  });

  it('should have default values set', () => {
    expect(apiGeneralSettingDto.product).toBeUndefined();
    expect(apiGeneralSettingDto.globalContacts).toBeUndefined();
    expect(apiGeneralSettingDto.features).toBeUndefined();
  });

  it('should set and get product correctly', () => {
    const mockProduct = 'Sample Product';

    apiGeneralSettingDto.product = mockProduct;

    expect(apiGeneralSettingDto.product).toEqual(mockProduct);
  });

  it('should set and get globalContacts correctly', () => {
    const mockGlobalContacts: ApiEmailContactDto[] = /* mock your ApiEmailContactDto[] value here */;

    apiGeneralSettingDto.globalContacts = mockGlobalContacts;

    expect(apiGeneralSettingDto.globalContacts).toEqual(mockGlobalContacts);
  });

  it('should set and get features correctly', () => {
    const mockFeatures: ApiFeatureDto[] = /* mock your ApiFeatureDto[] value here */;

    apiGeneralSettingDto.features = mockFeatures;

    expect(apiGeneralSettingDto.features).toEqual(mockFeatures);
  });

  // Add more test cases as needed
});
