import { ApiUserStoryDocument } from './api-user-story-document';

describe('ApiUserStoryDocument', () => {
  let apiUserStoryDocument: ApiUserStoryDocument;

  beforeEach(() => {
    apiUserStoryDocument = new ApiUserStoryDocument();
  });

  it('should create an instance', () => {
    expect(apiUserStoryDocument).toBeTruthy();
  });

  it('should have default values set', () => {
    expect(apiUserStoryDocument.fdId).toBeUndefined();
    expect(apiUserStoryDocument.persona).toBeUndefined();
    expect(apiUserStoryDocument.comment).toBeUndefined();
    expect(apiUserStoryDocument.uploadedBy).toBeUndefined();
    expect(apiUserStoryDocument.timeStamp).toBeUndefined();
    expect(apiUserStoryDocument.docName).toBeUndefined();
    expect(apiUserStoryDocument.createElement).toBeUndefined();
  });

  it('should set and get fdId correctly', () => {
    const mockFdId = 'SampleFdId';

    apiUserStoryDocument.fdId = mockFdId;

    expect(apiUserStoryDocument.fdId).toEqual(mockFdId);
  });

  it('should set and get persona correctly', () => {
    const mockPersona = 'Sample Persona';

    apiUserStoryDocument.persona = mockPersona;

    expect(apiUserStoryDocument.persona).toEqual(mockPersona);
  });

  it('should set and get comment correctly', () => {
    const mockComment = 'Sample Comment';

    apiUserStoryDocument.comment = mockComment;

    expect(apiUserStoryDocument.comment).toEqual(mockComment);
  });

  it('should set and get uploadedBy correctly', () => {
    const mockUploadedBy = 'Sample Uploaded By';

    apiUserStoryDocument.uploadedBy = mockUploadedBy;

    expect(apiUserStoryDocument.uploadedBy).toEqual(mockUploadedBy);
  });

  it('should set and get timeStamp correctly', () => {
    const mockTimeStamp = 'Sample Time Stamp';

    apiUserStoryDocument.timeStamp = mockTimeStamp;

    expect(apiUserStoryDocument.timeStamp).toEqual(mockTimeStamp);
  });

  it('should set and get docName correctly', () => {
    const mockDocName = 'Sample Doc Name';

    apiUserStoryDocument.docName = mockDocName;

    expect(apiUserStoryDocument.docName).toEqual(mockDocName);
  });

  it('should set and get createElement correctly', () => {
    const mockCreateElement = /* mock your createElement value here */;

    apiUserStoryDocument.createElement = mockCreateElement;

    expect(apiUserStoryDocument.createElement).toEqual(mockCreateElement);
  });

  // Add more test cases as needed
});
