import { ApiStoryDto } from './api-story-dto';

describe('ApiStoryDto', () => {
  let apiStoryDto: ApiStoryDto;

  beforeEach(() => {
    apiStoryDto = new ApiStoryDto();
  });

  it('should create an instance', () => {
    expect(apiStoryDto).toBeTruthy();
  });

  it('should have default values set', () => {
    expect(apiStoryDto.storyUUID).toBeUndefined();
    expect(apiStoryDto.storyName).toBeUndefined();
    expect(apiStoryDto.state).toBeUndefined();
    expect(apiStoryDto.supportText).toBeUndefined();
  });

  it('should set and get storyUUID correctly', () => {
    const mockStoryUUID = 'SampleStoryUUID';

    apiStoryDto.storyUUID = mockStoryUUID;

    expect(apiStoryDto.storyUUID).toEqual(mockStoryUUID);
  });

  it('should set and get storyName correctly', () => {
    const mockStoryName = 'Sample Story Name';

    apiStoryDto.storyName = mockStoryName;

    expect(apiStoryDto.storyName).toEqual(mockStoryName);
  });

  it('should set and get state correctly', () => {
    const mockState = 'Sample State';

    apiStoryDto.state = mockState;

    expect(apiStoryDto.state).toEqual(mockState);
  });

  it('should set and get supportText correctly', () => {
    const mockSupportText = 'Sample Support Text';

    apiStoryDto.supportText = mockSupportText;

    expect(apiStoryDto.supportText).toEqual(mockSupportText);
  });

  // Add more test cases as needed
});
